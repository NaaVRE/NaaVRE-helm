nameOverride: ""
fullnameOverride: ""

global:
  namespace: naavre

  ingress:
    domain: example.org
    commonAnnotations: {}
    tls:
      enabled: false

  secrets:
    k8sSecretCreator:
      apiToken:
    keycloak:
      adminPassword:
      naavreClientSecret:
      users: []
      postgresql:
        password:
    naavreCatalogueService:
      secretKey:
      auth:
        superuser:
          email: "admin@example.org"
          username: admin
          password:
      postgresql:
        password:
    vrepaas:
      vreapi:
        secretKey:
        auth:
          superuser:
            email: "admin@example.org"
            username: admin
            password:
          apiUser:
            username: user
            password:
            apiToken:
      vreapp:
        secretKey:
      postgresql:
        password:

  common:
    velero:
      podAnnotations:
        backup.velero.io/backup-volumes: pvc-volume,emptydir-volume

  externalServices:
    # The PaaS as well as all VLs must use the same Argo Workflows instance
    # (either part of the current deployment or external). While the
    # NaaVRE-workflow-service supports per-VL Argo configuration, the PaaS
    # does not. To retain a consistent behaviour, it is not possible to set
    # per-VL Argo configuration with this chart. In the future, per-VL Argo
    # configuration support should be added to the PaaS.
    # TODO: support per-VL Argo Workflows configuration
    argoWorkflows:
      useExternal: false
      namespace: nil
      url: nil
      token: nil
      executor_service_account: nil
    k8sSecretCreator:
      useExternal: false
      url: nil
      token: nil
    keycloak:
      useExternal: false
      url: nil
      realm: nil
      client_id: nil
      client_secret: nil

argoWorkflows:
  enabled: true
  workflowTTL: 86400
  crds:
    install: true
  ingress:
    basePath: /argowf

jupyterhub:
  enabled: true
  ingress:
    basePath: /jupyter
  hub:
    extraConfig: {}
    initContainers: []
    extraVolumes: []
    extraVolumeMounts: []
  vlabs:
    openlab:
      slug: openlab
      title: "NaaVRE Open Lab"
      description: "Open experimentation with virtual labs"
      image:
        name: ghcr.io/naavre/flavors/naavre-fl-vanilla-jupyter
        tag: v0.0.1
      configuration:
        base_image_tags_url: https://github.com/NaaVRE/flavors/releases/download/v0.0.1/base_image_tags.json
        module_mapping_url: https://raw.githubusercontent.com/QCDIS/NaaVRE-conf/main/module_mapping.json
        cell_github_url:
        cell_github_token:
        registry_url:
        log_queries: true
      postStartShSnippet: |
        echo "Pull some data"

  extraVolumes:
    - name: naa-vre-public
      persistentVolumeClaim:
        claimName: csi-s3-naa-vre-public-bucket
    - name: naa-vre-user-data
      persistentVolumeClaim:
        claimName: csi-s3-naa-vre-user-data-bucket
  extraVolumeMounts:
    - name: naa-vre-public
      mountPath: /home/jovyan/naa-vre-public
    - name: naa-vre-user-data
      mountPath: /home/jovyan/naa-vre-user-data/
      subPath: '{username}'

k8sSecretCreator:
  enabled: true
  ingress:
    basePath: /k8s-secret-creator

keycloak:
  enabled: true
  ingress:
    basePath: /auth

naavreCatalogueService:
  enabled: true
  ingress:
    basePath: /naavre-catalogue-service
  conf:
    dev_mode: false

naavreContainerizerService:
  enabled: true
  ingress:
    basePath: /naavre-containerizer-service

naavreWorkflowService:
  enabled: true
  ingress:
    basePath: /naavre-workflow-service

vrepaas:
  enabled: true

  vreapi:
    image:
      tag: v1.0.16-beta
    ingress:
      basePath: /vre-api

  vreapp:
    image:
      tag: v1.0.16-beta
    ingress:
      basePath: /vreapp
